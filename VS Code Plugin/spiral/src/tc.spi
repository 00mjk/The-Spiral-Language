inl (+) forall t {number}. (a : t) (b : t) : t = !!!!Add(a,b)
inl (-) forall t {number}. (a : t) (b : t) : t = !!!!Sub(a,b)
inl (*) forall t {number}. (a : t) (b : t) : t = !!!!Mult(a,b)
inl (**) forall t number}. (a : t) (b : t) : t = !!!!Pow(a,b)
inl (/) forall t {number}. (a : t) (b : t) : t = !!!!Div(a,b)
inl (%) forall t {number}. (a : t) (b : t) : t = !!!!Mod(a,b)

inl (<=) forall t {number}. (a : t) (b : t) : bool = !!!!LTE(a,b)
inl (<) forall t {number}. (a : t) (b : t) : bool = !!!!LT(a,b)
inl (=) forall t {number}. (a : t) (b : t) : bool = !!!!EQ(a,b)
inl (<>) forall t {number}. (a : t) (b : t) : bool = !!!!NEQ(a,b)
inl (>) forall t {number}. (a : t) (b : t) : bool = !!!!GT(a,b)
inl (>=) forall t {number}. (a : t) (b : t) : bool = !!!!GTE(a,b)

inl (=) forall t. (a : t) (b : t) : bool = !!!!EQ(a,b)
inl (<>) forall t. (a : t) (b : t) : bool = !!!!NEQ(a,b)

inl (|>) a b = b a
inl (>>) a b x = b (a x)
inl dyn (~x) = x

inl array_create forall t. (size : i32) : array t = !!!!ArrayCreate(`t,size)
inl array_index forall t. (ar : array t) (i : i32) : t = !!!!ArrayIndex(ar,i)
inl array_set forall t. (ar : array t) (i : i32) (v : t) : () = !!!!ArrayIndexSet(ar,i,v)
inl array_length forall t. (ar : array t) : i32 = !!!!ArrayLength(ar)

inl for (from: nearTo:) body state =
    let rec loop i s = if i < nearTo then loop (i+1) (body i s) else s
    loop from state

inl for' (from: nearTo:) body = for (from:nearTo:) (fun i () => body i) ()

inl array_fold f s ar = for (from: 0 nearTo: array_length ar) (fun i s => f s (array_index ar i)) s
inl array_map f ar =
    inl nearTo = array_length ar
    inl ar' = array_create nearTo
    for' (from: 0 nearTo: ) (fun i => array_set ar' i (f (array_index ar i)))
    ar'

inl array_filter f ar =
    inl nearTo = array_length ar
    inl ar' = array_create nearTo
    inl nearTo =
        for (from:0 nearTo:) (fun i count =>
            if f i then array_set ar' i (array_index ar i) . count + 1
            else count
            ) 0
    inl ar = ar'
    inl ar' = array_create nearTo
    for' (from:0 nearTo:) (fun i => array_set ar' i (array_index ar i))
    ar'

inl writeline (x : string): () = $"System.Console.WriteLine(!x)"
inl readline (): string = $"System.Console.ReadLine()"