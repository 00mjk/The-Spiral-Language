Error trace on line: 461, column: 13 in file "CudaKernel".
        inl items_per_thread, blockDim =
            ^
Error trace on line: 465, column: 13 in file "CudaKernel".
        inl gridDimY = min 64 (s dim_in_a)
            ^
Error trace on line: 467, column: 13 in file "CudaKernel".
        inl in = to_dev_tensor in
            ^
Error trace on line: 468, column: 13 in file "CudaKernel".
        inl out = to_dev_tensor out
            ^
Error trace on line: 470, column: 13 in file "CudaKernel".
        inl map_in = match d with {map_in} -> map_in | _ -> id
            ^
Error trace on line: 472, column: 9 in file "CudaKernel".
        run {
        ^
Error trace on line: 142, column: 13 in file "Cuda".
    inl run {blockDim=!dim3 blockDim gridDim=!dim3 gridDim kernel} as runable =
            ^
Error trace on line: 147, column: 13 in file "Cuda".
        inl kernel =
            ^
Error trace on line: 159, column: 33 in file "Cuda".
        inl method_name, args = join_point_entry_cuda kernel
                                ^
Error trace on line: 158, column: 35 in file "Cuda".
        inl join_point_entry_cuda x = !JoinPointEntryCuda(x())
                                  ^
Error trace on line: 153, column: 17 in file "Cuda".
            inl _ -> // This convoluted way of swaping non-literals for ops is so they do not get called outside of the kernel.
                ^
Error trace on line: 154, column: 21 in file "Cuda".
                inl blockDim = {x=x(); y=y(); z=z()}
                    ^
Error trace on line: 155, column: 21 in file "Cuda".
                inl gridDim = {x=x'(); y=y'(); z=z'()}
                    ^
Error trace on line: 156, column: 17 in file "Cuda".
                kernel blockDim gridDim
                ^
Error trace on line: 476, column: 21 in file "CudaKernel".
                inl grid_for = grid_for {blockDim gridDim}
                    ^
Error trace on line: 477, column: 17 in file "CudaKernel".
                grid_for .y dim_in_a {body=inl {i} ->
                ^
Error trace on line: 74, column: 16 in file "CudaKernel".
        | .std d -> forcd {d with from by near_to}
               ^
Error trace on line: 20, column: 15 in file "CudaKernel".
    inl forcd {d with from body} =
              ^
Error trace on line: 21, column: 13 in file "CudaKernel".
        inl finally =
            ^
Error trace on line: 26, column: 13 in file "CudaKernel".
        inl check =
            ^
Error trace on line: 34, column: 13 in file "CudaKernel".
        inl by =
            ^
Error trace on line: 40, column: 13 in file "CudaKernel".
        inl to =
            ^
Error trace on line: 45, column: 13 in file "CudaKernel".
        inl state = 
            ^
Error trace on line: 50, column: 13 in file "CudaKernel".
        inl state = {from state}
            ^
Error trace on line: 51, column: 9 in file "CudaKernel".
        whilecd {
        ^
Error trace on line: 56, column: 9 in file "CudaKernel".
        |> finally
        ^
Error trace on line: 9, column: 17 in file "CudaKernel".
    inl whilecd {cond state body} =
                ^
Error trace on line: 10, column: 13 in file "CudaKernel".
        inl r = HostTensor.create {
            ^
Error trace on line: 17, column: 9 in file "CudaKernel".
        !While((join cond r.get), (r.set <| body r.get))
        ^
Error trace on line: 54, column: 24 in file "CudaKernel".
            body = inl {from state} -> {from=from+by; state=body {state i=from}}
                       ^
Error trace on line: 477, column: 48 in file "CudaKernel".
                grid_for .y dim_in_a {body=inl {i} ->
                                               ^
Error trace on line: 478, column: 25 in file "CudaKernel".
                    inl in, out = in i, out i
                        ^
Error trace on line: 487, column: 25 in file "CudaKernel".
                    inl items = create_items (type in.elem_type |> map_in)
                        ^
Error trace on line: 489, column: 38 in file "CudaKernel".
                    inl inner_loop = grid_loop .x dim_in_b
                                     ^
Variable grid_loop not bound.
