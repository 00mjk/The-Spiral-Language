Error trace on line: 78, column: 5 in file "CudaBlas".
    ret <| s.module_add .CudaBlas {gemm' gemm}
    ^
Error trace on line: 107, column: 12 in file "Core".
inl (<|) a b = a b
           ^
Error trace on line: 6, column: 9 in file "CudaModules".
    inb s = CudaBlas s
        ^
Error trace on line: 7, column: 9 in file "CudaModules".
    inl s = Region s |> CudaStream |> CudaTensor |> CudaKernel
        ^
Error trace on line: 46, column: 36 in file "Region".
inl create' {region_module_name} s ret =
                                   ^
Error trace on line: 47, column: 9 in file "Region".
    inl s = s region_module_name .create
        ^
Error trace on line: 48, column: 13 in file "Region".
    inl r = ret s
            ^
Error trace on line: 8, column: 9 in file "CudaModules".
    inb s = s.RegionMem.create'
        ^
Error trace on line: 46, column: 36 in file "Region".
inl create' {region_module_name} s ret =
                                   ^
Error trace on line: 47, column: 9 in file "Region".
    inl s = s region_module_name .create
        ^
Error trace on line: 48, column: 13 in file "Region".
    inl r = ret s
            ^
Error trace on line: 9, column: 9 in file "CudaModules".
    inb s = s.RegionStream.create'
        ^
Error trace on line: 10, column: 5 in file "CudaModules".
    ret s
    ^
Error trace on line: 2, column: 5 in file "kernel5".
inb s = CudaModules (1024*1024)
    ^
Error trace on line: 4, column: 5 in file "kernel5".
inl inner_size = 10
    ^
Error trace on line: 5, column: 5 in file "kernel5".
inl outer_size = 32
    ^
Error trace on line: 7, column: 5 in file "kernel5".
inl a1 = s.CudaRandom.create .Uniform {elem_type=float32; dim=outer_size,inner_size}
    ^
Error trace on line: 8, column: 5 in file "kernel5".
inl a2 = s.CudaRandom.create .Uniform {elem_type=float32; dim=outer_size,inner_size}
    ^
Error trace on line: 9, column: 5 in file "kernel5".
inl a3 = s.CudaTensor.create {elem_type=float32; dim=1}
    ^
Error trace on line: 17, column: 10 in file "kernel5".
inl o1 = f (a1, a2) ()
         ^
Error trace on line: 10, column: 10 in file "kernel5".
inl f a1 a2 =
         ^
Error trace on line: 11, column: 5 in file "kernel5".
    s.CudaKernel.map_d1_redo_map {
    ^
Error trace on line: 744, column: 48 in file "CudaKernel".
inl map_dx_redo_map_template dim kernel w d in in' =
                                               ^
Error trace on line: 745, column: 9 in file "CudaKernel".
    inl in' = 
        ^
Error trace on line: 750, column: 9 in file "CudaKernel".
    inl map_in = match d with {map_in} -> map_in | _ -> const
        ^
Error trace on line: 751, column: 9 in file "CudaKernel".
    inl map_out, elem_type = 
        ^
Error trace on line: 754, column: 9 in file "CudaKernel".
    inl out = w.CudaTensor.create {elem_type dim=in'.dim}
        ^
Error trace on line: 755, column: 5 in file "CudaKernel".
    kernel w {d with map_in map_out} in in' out
    ^
Error trace on line: 422, column: 72 in file "CudaKernel".
inl map_d1_redo_map' w {d with redo neutral_elem} (!zip in) (!zip in') (!zip out) = 
                                                                       ^
Error trace on line: 423, column: 9 in file "CudaKernel".
    inl dim_in_a, dim_in_b = in.dim
        ^
Error trace on line: 424, column: 9 in file "CudaKernel".
    inl dim_in' :: () = in'.dim
        ^
Error trace on line: 429, column: 9 in file "CudaKernel".
    inl blockDim = lit_min 1024 (s dim_in_b)
        ^
Error trace on line: 430, column: 9 in file "CudaKernel".
    inl gridDimY = lit_min 64 (s dim_in')
        ^
Error trace on line: 432, column: 9 in file "CudaKernel".
    inl in = in.to_dev_tensor
        ^
Error trace on line: 433, column: 15 in file "CudaKernel".
    inl in' = in'.to_dev_tensor
              ^
Error trace on line: 185, column: 7 in file "HostTensor".
    | .(_) & x -> 
      ^
Error trace on line: 186, column: 9 in file "HostTensor".
        if module_has_member data x then data x
        ^
Error trace on line: 187, column: 14 in file "HostTensor".
        else data.methods x data
             ^
Cannot find a member named to_dev_tensor inside the module.
