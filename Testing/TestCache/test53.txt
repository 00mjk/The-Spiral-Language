module SpiralExample.Main
let cuda_kernels = """
#include <assert.h>

extern "C" {
    
}
"""

let rec method_0((var_0: (int64 [])), (var_1: int64)): unit =
    let (var_2: bool) = (var_1 < 4L)
    if var_2 then
        var_0.[int32 var_1] <- var_1
        let (var_3: int64) = (var_1 + 1L)
        method_0((var_0: (int64 [])), (var_3: int64))
    else
        ()
and method_1((var_0: (int64 [])), (var_1: (int64 [])), (var_2: int64), (var_3: int64), (var_4: int64)): int64 =
    let (var_5: bool) = (var_4 < var_2)
    if var_5 then
        let (var_6: int64) = var_0.[int32 var_4]
        var_1.[int32 var_3] <- var_6
        let (var_7: int64) = (var_3 + 1L)
        let (var_8: int64) = (var_4 + 1L)
        method_1((var_0: (int64 [])), (var_1: (int64 [])), (var_2: int64), (var_7: int64), (var_8: int64))
    else
        var_3
let (var_1: (int64 [])) = Array.zeroCreate<int64> (System.Convert.ToInt32(4L))
let (var_2: int64) = 0L
method_0((var_1: (int64 [])), (var_2: int64))
let (var_4: (int64 [])) = Array.zeroCreate<int64> (System.Convert.ToInt32(4L))
let (var_5: int64) = 0L
method_0((var_4: (int64 [])), (var_5: int64))
let (var_7: (int64 [])) = Array.zeroCreate<int64> (System.Convert.ToInt32(4L))
let (var_8: int64) = 0L
method_0((var_7: (int64 [])), (var_8: int64))
let (var_9: int64) = var_1.LongLength
let (var_10: int64) = var_4.LongLength
let (var_11: int64) = (var_9 + var_10)
let (var_12: int64) = var_7.LongLength
let (var_13: int64) = (var_11 + var_12)
let (var_14: (int64 [])) = Array.zeroCreate<int64> (System.Convert.ToInt32(var_13))
let (var_15: int64) = 0L
let (var_16: int64) = var_1.LongLength
let (var_17: int64) = 0L
let (var_18: int64) = method_1((var_1: (int64 [])), (var_14: (int64 [])), (var_16: int64), (var_15: int64), (var_17: int64))
let (var_19: int64) = var_4.LongLength
let (var_20: int64) = 0L
let (var_21: int64) = method_1((var_4: (int64 [])), (var_14: (int64 [])), (var_19: int64), (var_18: int64), (var_20: int64))
let (var_22: int64) = var_7.LongLength
let (var_23: int64) = 0L
let (var_24: int64) = method_1((var_7: (int64 [])), (var_14: (int64 [])), (var_22: int64), (var_21: int64), (var_23: int64))
var_14
