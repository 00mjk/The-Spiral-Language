module SpiralExample.Main
let cuda_kernels = """
#include <assert.h>

extern "C" {
    
}
"""

type EnvHeapMutable0 =
    {
    mutable mem_0: int64
    mutable mem_1: int64
    mutable mem_2: int64
    }
and Union1 =
    | Union1Case0 of EnvHeap2
    | Union1Case1 of EnvHeapMutable0
    | Union1Case2 of EnvHeapMutable3
and EnvHeap2 =
    {
    mem_0: int64
    mem_1: int64
    mem_2: int64
    }
and EnvHeapMutable3 =
    {
    mutable mem_0: int64
    mutable mem_1: int64
    }
let (var_11: int64) = 1L
let (var_12: int64) = 2L
let (var_13: int64) = 3L
let (var_14: EnvHeapMutable0) = ({mem_0 = (var_11: int64); mem_1 = (var_12: int64); mem_2 = (var_13: int64)} : EnvHeapMutable0)
let (var_15: Union1) = (Union1Case1(var_14))
match var_15 with
| Union1Case0(var_16) ->
    let (var_19: int64) = var_16.mem_0
    let (var_20: int64) = var_16.mem_1
    let (var_21: int64) = var_16.mem_2
    let (var_22: int64) = (var_19 * var_20)
    (var_22 * var_21)
| Union1Case1(var_17) ->
    let (var_24: int64) = var_17.mem_0
    let (var_25: int64) = var_17.mem_1
    let (var_26: int64) = var_17.mem_2
    let (var_27: int64) = (var_24 + var_25)
    (var_27 + var_26)
| Union1Case2(var_18) ->
    let (var_29: int64) = var_18.mem_0
    let (var_30: int64) = var_18.mem_1
    (var_29 + var_30)

