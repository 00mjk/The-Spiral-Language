module SpiralExample.Main
let cuda_kernels = """
#include <assert.h>

extern "C" {
    
}
"""

type EnvHeapMutable0 =
    {
    mutable mem_0: int64
    mutable mem_1: int64
    mutable mem_2: int64
    }
and Union1 =
    | Union1Case0 of EnvHeapMutable0
    | Union1Case1 of EnvHeapMutable2
and EnvHeapMutable2 =
    {
    mutable mem_0: int64
    mutable mem_1: int64
    }
let (var_7: int64) = 1L
let (var_8: int64) = 2L
let (var_9: int64) = 3L
let (var_10: EnvHeapMutable0) = ({mem_0 = (var_7: int64); mem_1 = (var_8: int64); mem_2 = (var_9: int64)} : EnvHeapMutable0)
let (var_11: Union1) = (Union1Case0(var_10))
match var_11 with
| Union1Case0(var_12) ->
    let (var_14: int64) = var_12.mem_0
    let (var_15: int64) = var_12.mem_1
    let (var_16: int64) = var_12.mem_2
    let (var_17: int64) = (var_14 + var_15)
    (var_17 + var_16)
| Union1Case1(var_13) ->
    let (var_19: int64) = var_13.mem_0
    let (var_20: int64) = var_13.mem_1
    (var_19 + var_20)

