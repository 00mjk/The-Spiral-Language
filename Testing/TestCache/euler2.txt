module SpiralExample.Main
let cuda_kernels = """

extern "C" {
    
}
"""

type Env0 =
    struct
    val mem_0: int64
    val mem_1: int64
    val mem_2: int64
    new(arg_mem_0, arg_mem_1, arg_mem_2) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1; mem_2 = arg_mem_2}
    end
let rec method_0((var_0: int64), (var_1: int64), (var_2: int64)): Env0 =
    let (var_3: bool) = (var_1 <= 4000000L)
    if var_3 then
        let (var_4: int64) = (var_1 % 2L)
        let (var_5: bool) = (var_4 = 0L)
        let (var_7: int64) =
            if var_5 then
                (var_2 + var_1)
            else
                var_2
        let (var_8: int64) = (var_0 + var_1)
        method_0((var_1: int64), (var_8: int64), (var_7: int64))
    else
        (Env0(var_0, var_1, var_2))
let (var_0: int64) = 0L
let (var_1: int64) = 1L
let (var_2: int64) = 2L
let (var_3: Env0) = method_0((var_1: int64), (var_2: int64), (var_0: int64))
let (var_4: int64) = var_3.mem_0
let (var_5: int64) = var_3.mem_1
let (var_6: int64) = var_3.mem_2
System.Console.WriteLine(var_6)

