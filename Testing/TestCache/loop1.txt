module SpiralExample.Main
let cuda_kernels = """

extern "C" {
    
}
"""

let rec method_0((var_0: int64), (var_1: int64), (var_2: int64), (var_3: int64)): int64 =
    let (var_4: bool) = (var_2 >= var_1)
    if var_4 then
        let (var_5: int64) = (var_2 % 3L)
        let (var_6: bool) = (var_5 = 0L)
        let (var_9: bool) =
            if var_6 then
                true
            else
                let (var_7: int64) = (var_2 % 5L)
                (var_7 = 0L)
        let (var_11: int64) =
            if var_9 then
                (var_3 + var_2)
            else
                var_3
        let (var_12: int64) = (var_2 + var_0)
        method_0((var_0: int64), (var_1: int64), (var_12: int64), (var_11: int64))
    else
        var_3
and method_1((var_0: int64), (var_1: int64), (var_2: int64), (var_3: int64)): int64 =
    let (var_4: bool) = (var_2 <= var_1)
    if var_4 then
        let (var_5: int64) = (var_2 % 3L)
        let (var_6: bool) = (var_5 = 0L)
        let (var_9: bool) =
            if var_6 then
                true
            else
                let (var_7: int64) = (var_2 % 5L)
                (var_7 = 0L)
        let (var_11: int64) =
            if var_9 then
                (var_3 + var_2)
            else
                var_3
        let (var_12: int64) = (var_2 + var_0)
        method_1((var_0: int64), (var_1: int64), (var_12: int64), (var_11: int64))
    else
        var_3
let (var_0: int64) = 999L
let (var_1: int64) = 3L
let (var_2: int64) = -1L
let (var_3: int64) = 0L
let (var_4: bool) = (var_2 < 0L)
let (var_7: int64) =
    if var_4 then
        method_0((var_2: int64), (var_1: int64), (var_0: int64), (var_3: int64))
    else
        method_1((var_2: int64), (var_1: int64), (var_0: int64), (var_3: int64))
System.Console.WriteLine(var_7)

